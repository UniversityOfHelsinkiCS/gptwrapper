services:
  app:
    build:
      context: ./
      dockerfile: dev.Containerfile
    image: gptwrapper_dev
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
      - OLLAMA_URL=host.docker.internal:11434
      - S3_HOST=http://minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_ACCESS_KEY=minioadmin
      - S3_BUCKET=mybucket
      - BMQ_REDIS_HOST=redis
      - BMQ_REDIS_PORT=6379
    volumes:
      - ./:/opt/app-root/src
    ports:
      - 3000:3000
      - 8000:8000
    container_name: gptwrapper_dev
    depends_on:
      - redis

  db:
    image: docker.io/postgres:15.8-alpine
    environment:
      - PGDATA=/data
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5433:5432
    volumes:
      - pg_data:/data
    container_name: gptwrapper_db

  redis:
    image: redis/redis-stack-server
    container_name: gptwrapper_redis
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data

  # Comment out if you use local ollama. Set OLLAMA_URL=host.docker.internal:11434 if using recent Docker Desktop.
  ollama:
    image: ollama/ollama
    ports:
      - 11434:11434 # expose the Ollama API to the host
    volumes:
      - ollama_data:/root/.ollama # persistent model storage
    entrypoint: ["/bin/bash", "-c", "\
      ollama serve & \
      sleep 5 && \
      ollama pull qwen2.5vl:7b && \
      wait"]

  dalai:
  #   # image: toska/dalai:latest
    build:
      context: ../dalai
      dockerfile: ../dalai/dev.Dockerfile
    environment:
    # - OLLAMA_URL=http://host.docker.internal:11434
      - OLLAMA_URL=http://ollama:11434
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - S3_HOST=http://minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_ACCESS_KEY=minioadmin
    volumes:
      - ../dalai/:/opt/app-root/src
      - dalai_data:/app
    container_name: gptwrapper_dalai
    depends_on:
    - redis

  minio:
    image: minio/minio:latest
    container_name: minio
    command: server /data --console-address ":9001"
    ports:
      - '9000:9000'
      - '9001:9001' # MinIO web console
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - ./minio-data:/data
    healthcheck:
      test: ['CMD', 'wget', '--spider', '-q', 'http://localhost:9000/minio/health/ready']
      interval: 10s
      timeout: 5s
      retries: 5

  mc:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      set -e;
      until (mc alias set local http://minio:9000 minioadmin minioadmin); do
        echo 'Waiting for MinIO...'; sleep 2;
      done;
      mc mb --ignore-existing local/mybucket;
      tail -f /dev/null
      "
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin

volumes:
  pg_data:
  redis_data:
  chromadb_data:
  ollama_data:
  dalai_data:
  minio-data:
